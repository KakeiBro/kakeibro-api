name: Master CI/CD

on:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: '9.0.x'
  SERVICE_NAME: 'kakeibro-api' # Cloud Run service name
  REGION: 'us-east1' # Cloud Run region (e.g., us-central1)
  CACHE_VERSION: v1 # Change this to bust cache when needed

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Kakeibro.API

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache .NET dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ env.CACHE_VERSION }}-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-${{ env.CACHE_VERSION }}-

      - name: Restore dependencies
        run: dotnet restore

      - name: Check format
        run: dotnet format --verify-no-changes

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal
      
      - name: Run outdated package check
        run: dotnet list package --outdated
      
#      - name: Run dotnet migrations check
#        run: dotnet ef migrations list
        
      - name: Run vulnerabilities check
        run: dotnet list package --vulnerable

  build-and-push-docker:
    name: Build and push docker image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' # Only build and push on push to main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-

      - name: Log in to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACT_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }} # JSON key for GCP service account

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./Kakeibro.API
          push: true
          tags: |
            ${{ secrets.ARTIFACT_REGISTRY }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_NAME }}/${{ secrets.IMAGE_NAME }}:latest
            ${{ secrets.ARTIFACT_REGISTRY }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_NAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
          file: ./Kakeibro.API/src/KakeiBro.API/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  deploy-to-cloud-run:
    name: Deploy image to Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/main' # Only deploy on push to main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }} # JSON key for GCP service account

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image=${{ secrets.ARTIFACT_REGISTRY }}/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_NAME }}/${{ secrets.IMAGE_NAME }}:latest \
            --platform=managed \
            --region=${{ env.REGION }} \
            --allow-unauthenticated
