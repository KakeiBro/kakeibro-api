name: Cleanup Action Caches

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  actions: write

jobs:
  clean-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Get caches list
        id: list-caches
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/caches")
          echo "$response" | jq -r '.actions_caches | sort_by(.created_at) | reverse' > caches.json

      - name: Filter and delete old caches
        run: |
          jq -c '.[] | select(.key | startswith("Linux-buildx"))' caches.json > buildx_caches.json
          jq -c '.[] | select(.key | startswith("Linux-nuget"))' caches.json > nuget_caches.json

          latest_buildx_cache_id=$(jq -r '.[0].id' buildx_caches.json)
          latest_nuget_cache_id=$(jq -r '.[0].id' nuget_caches.json)

          jq -c '.[1:] | .[]' buildx_caches.json | while read -r cache; do
            cache_id=$(echo $cache | jq -r '.id')
            curl -X DELETE -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches/$cache_id"
          done

          jq -c '.[1:] | .[]' nuget_caches.json | while read -r cache; do
            cache_id=$(echo $cache | jq -r '.id')
            curl -X DELETE -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${{ github.repository }}/actions/caches/$cache_id"
          done
        if: success()
      
      - name: Cleanup files
        run: |
          rm -f buildx_caches.json
          rm -f nuget_caches.json